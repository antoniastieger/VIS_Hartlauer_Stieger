package com.example.xmlparser.parser

import org.xml.sax.Attributes
import org.xml.sax.helpers.DefaultHandler
import java.io.InputStream
import javax.xml.parsers.SAXParserFactory

class WindXMLParser : DefaultHandler() {
    private var currentElement: String? = null
    private var windInfo: WindInfo? = null

    fun parse(inputStream: InputStream): WindInfo {
        val saxParser = SAXParserFactory.newInstance().newSAXParser()
        saxParser.parse(inputStream, this)
        return windInfo!!
    }

    override fun startElement(uri: String?, localName: String?, qName: String?, attributes: Attributes?) {
        currentElement = qName
    }

    override fun characters(ch: CharArray?, start: Int, length: Int) {
        val value = String(ch!!, start, length).trim()

        if (currentElement == "speed") {
            windInfo = WindInfo(value.toDouble(), windInfo?.getDeg() ?: 0)
        } else if (currentElement == "deg") {
            windInfo = WindInfo(windInfo?.getSpeed() ?: 0.0, value.toInt())
        }
    }
}

public class WindInfo {
    private double speed;
    private int deg;

    public WindInfo(double speed, int deg) {
        this.speed = speed;
        this.deg = deg;
    }

    public double getSpeed() {
        return speed;
    }

    public int getDeg() {
        return deg;
    }
}
